// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MenuCategory {
  id          String         @id @default(uuid())
  title       String
  description String?
  parentId    String?        @map("parent_id")
  parent      MenuCategory?  @relation("CategoryToSubcategory", fields: [parentId], references: [id])
  children    MenuCategory[] @relation("CategoryToSubcategory")
  menus       Menu[]
  createdAt   DateTime       @default(now()) @map("created_at")
  updatedAt   DateTime       @updatedAt @map("updated_at")

  @@map("menu_categories")
}

model Menu {
  id          String      @id @default(uuid())
  title       String
  description String?
  price       Decimal     @db.Decimal(10, 2)
  isRecommend Boolean     @map("is_recommend")
  categoryId  String      @map("category_id")
  category    MenuCategory @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[]
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")

  @@map("menus")
}

model Order {
  id           String      @id @default(uuid())
  customerName String      @map("customer_name")
  status       OrderStatus
  totalAmount  Decimal     @map("total_amount") @db.Decimal(10, 2)
  orderItems   OrderItem[]
  createdAt    DateTime    @default(now()) @map("created_at")
  updatedAt    DateTime    @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderItem {
  id               String   @id @default(uuid())
  quantity         Int
  priceAtOrderTime Decimal  @map("price_at_order_time") @db.Decimal(10, 2)
  subtotal         Decimal  @db.Decimal(10, 2)
  notes            String?
  orderId          String   @map("order_id")
  order            Order    @relation(fields: [orderId], references: [id])
  menuId           String   @map("menu_id")
  menu             Menu     @relation(fields: [menuId], references: [id])
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  @@map("order_items")
}

enum OrderStatus {
  PAID
  UNPAID
}
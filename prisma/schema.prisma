generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MenuCategory {
  id                    String         @id @default(uuid()) @db.VarChar(100)
  createdAt             DateTime       @map("created_at") @db.Timestamptz(6)
  updatedAt             DateTime       @updatedAt @map("updated_at") @db.Timestamptz(6)
  title                 String         @unique @db.VarChar(255)
  description           String?
  parent_id_id          String?        @db.VarChar(100)
  menu_categories       MenuCategory?  @relation("menu_categoriesTomenu_categories", fields: [parent_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "menu_categories_parent_id_id_46796091_fk_menu_categories_id")
  other_menu_categories MenuCategory[] @relation("menu_categoriesTomenu_categories")
  menu_menu             Menu[]

  @@index([id], map: "menu_categories_id_f4a35153_like")
  @@index([parent_id_id], map: "menu_categories_parent_id_id_46796091")
  @@index([parent_id_id], map: "menu_categories_parent_id_id_46796091_like")
  @@index([title], map: "menu_categories_title_d6cb991c_like")
  @@map("menu_categories")
}

model Menu {
  id              String            @id @default(uuid()) @db.VarChar(100)
  createdAt       DateTime          @map("created_at") @db.Timestamptz(6)
  updatedAt       DateTime          @updatedAt @map("updated_at") @db.Timestamptz(6)
  title           String            @unique @db.VarChar(255)
  description     String?
  price           Decimal           @db.Decimal(10, 2)
  is_recommended  Boolean
  category_id_id  String            @db.VarChar(100)
  menu_categories MenuCategory      @relation(fields: [category_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "menu_menu_category_id_id_c05a90fc_fk_menu_categories_id")
  order_orderitem order_orderitem[]

  @@index([category_id_id], map: "menu_menu_category_id_id_c05a90fc")
  @@index([category_id_id], map: "menu_menu_category_id_id_c05a90fc_like")
  @@index([id], map: "menu_menu_id_06015880_like")
  @@index([title], map: "menu_menu_title_ec032633_like")
  @@map("menu_menu")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.Timestamptz(6)
  is_superuser               Boolean
  username                   String                       @unique @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.Timestamptz(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]

  @@index([username], map: "auth_user_username_6821ab7c_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544")
  @@index([user_id], map: "auth_user_groups_user_id_6a12ed8b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permissions_permission_id_1fbb5f2c")
  @@index([user_id], map: "auth_user_user_permissions_user_id_a95ead1b")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

model order_order {
  id              String            @id @db.VarChar(100)
  created_at      DateTime          @db.Timestamptz(6)
  updated_at      DateTime          @db.Timestamptz(6)
  status          String            @db.VarChar(10)
  total_amount    Decimal           @db.Decimal(10, 2)
  customer_name   String            @db.VarChar(100)
  order_orderitem order_orderitem[]

  @@index([id], map: "order_order_id_1fcf9179_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model order_orderitem {
  id                  String      @id @db.VarChar(100)
  created_at          DateTime    @db.Timestamptz(6)
  updated_at          DateTime    @db.Timestamptz(6)
  quantity            Int
  price_at_order_time Decimal     @db.Decimal(10, 2)
  subtotal            Decimal     @db.Decimal(10, 2)
  notes               String?
  menu_id_id          String      @db.VarChar(100)
  order_id_id         String      @db.VarChar(100)
  menu_menu           Menu        @relation(fields: [menu_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_orderitem_menu_id_id_b457755c_fk_menu_menu_id")
  order_order         order_order @relation(fields: [order_id_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_orderitem_order_id_id_d4e55ccf_fk_order_order_id")

  @@index([id], map: "order_orderitem_id_86d001d0_like")
  @@index([menu_id_id], map: "order_orderitem_menu_id_id_b457755c")
  @@index([menu_id_id], map: "order_orderitem_menu_id_id_b457755c_like")
  @@index([order_id_id], map: "order_orderitem_order_id_id_d4e55ccf")
  @@index([order_id_id], map: "order_orderitem_order_id_id_d4e55ccf_like")
}
